{"version":3,"sources":["webpack:///./src/templates/service.js"],"names":["service","data","title","frontmatter","headerClass","bodyClass","className","style","backgroundImage","dangerouslySetInnerHTML","__html","html","query"],"mappings":"kHAAA,0FAQe,sBAAe,IACpBA,EADmB,EAAXC,KACRD,QACFE,EAAQF,EAAQG,YAAYD,MAClC,OACE,kBAAC,IAAD,CAAQE,YAAY,oBAAoBC,UAAU,wBAChD,yBACEC,UAAU,wEACVC,MAAO,CAAEC,gBATR,2mCAWD,yBAAKF,UAAU,8CACb,yBAAKA,UAAU,4DACb,wBAAIA,UAAU,8BACXJ,GAEH,yBAAKI,UAAU,iBACb,yBAAKG,wBAAyB,CAAEC,OAAQV,EAAQW,cASvD,IAAMC,EAAK","file":"component---src-templates-service-js-6740e0f4076cebdfd4d5.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport \"../css/markdown-github.css\";\n\nconst svg = `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 2 1'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientUnits='userSpaceOnUse' x1='0' x2='0' y1='0' y2='1' gradientTransform='rotate(226,0.5,0.5)'%3E%3Cstop offset='0' stop-color='%238033aa'/%3E%3Cstop offset='1' stop-color='%231c3ed3'/%3E%3C/linearGradient%3E%3ClinearGradient id='b' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='0' y2='1' gradientTransform='rotate(0,0.5,0.5)'%3E%3Cstop offset='0' stop-color='%2336fff5' stop-opacity='0'/%3E%3Cstop offset='1' stop-color='%2336fff5' stop-opacity='1'/%3E%3C/linearGradient%3E%3ClinearGradient id='c' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='2' y2='2' gradientTransform='rotate(0,0.5,0.5)'%3E%3Cstop offset='0' stop-color='%2336fff5' stop-opacity='0'/%3E%3Cstop offset='1' stop-color='%2336fff5' stop-opacity='1'/%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x='0' y='0' fill='url(%23a)' width='2' height='1'/%3E%3Cg fill-opacity='0.5'%3E%3Cpolygon fill='url(%23b)' points='0 1 0 0 2 0'/%3E%3Cpolygon fill='url(%23c)' points='2 1 2 0 0 0'/%3E%3C/g%3E%3C/svg%3E\")`;\n\nexport default ({ data }) => {\n  const { service } = data;\n  const title = service.frontmatter.title;\n  return (\n    <Layout headerClass=\"relative bg-white\" bodyClass=\"px-0 md:px-0 lg:px-0\">\n      <div\n        className=\"min-h-screen flex flex-col items-start bg-no-repeat bg-fixed bg-cover\"\n        style={{ backgroundImage: svg }}\n      >\n        <div className=\"mt-56 bg-white w-full pb-16 mb-20 skew-y-5\">\n          <div className=\"container mx-auto px-6 md:px-10 lg:px-24 pt-16 -skew-y-5\">\n            <h2 className=\"text-5xl text-my_color-700\">\n              {title}\n            </h2>\n            <div className=\"markdown-body\">\n              <div dangerouslySetInnerHTML={{ __html: service.html }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($id: String) {\n    service: markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        path\n        image\n        title\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}